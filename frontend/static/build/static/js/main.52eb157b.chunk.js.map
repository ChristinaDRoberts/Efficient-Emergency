{"version":3,"sources":["containers/callList.js","containers/callDetail.js","containers/callCreate.js","containers/dispatcherCallsDetail.js","containers/heartbeat.js","containers/emt.js","containers/App.js","serviceWorker.js","index.js"],"names":["$","window","DispatchCallLogContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","callList","_this2","fetch","then","response","status","console","log","json","toConsumableArray","push","setState","react_default","a","createElement","callList_OpenImagesOnCallList","route","Component","Card","_this3","handleClose","e","active","handleToggle","_this4","className","id","phone","Button","onClick","Modal","show","onHide","Header","closeButton","Title","Body","scene_images","map","image","index","Image","key","src","concat","OpenImagesOnCallList","_this5","componentDidMount","document","ready","on","toggleClass","_this6","calls","callList_Card","variant","href","type","ClientContainer","image_preview","imageCollection","handleImage","bind","assertThisInitialized","submitImage","event","preventDefault","file","target","files","fileReader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","JSON","stringify","parseInt","dispatchCallId","forEach","value","method","body","images","alt","Row","Form","onSubmit","onChange","name","DispatchCurrentCallContainer","createCall","conf","headers","Headers","Content-Type","dispatchInfo","intervalId","setInterval","updateDispatchImages","sendTextMessage","text","componentWillUnmount","clearInterval","handlePhoneNumber","defineProperty","htmlFor","placeholder","pattern","required","DispatchCallsDetailContainer","callData","pk","data","specificCall","showNav","date","user","username","dispatcherCallsDetail_ModalDetailComponent","dispatcherCallsDetail_TextMedical","dispatchId","TextMedical","ModalDetailComponent","HeartbeatComponent","App","currentScreen","history","pushState","pathname","location","Container","heartbeat","path","exec","dispatcherCallsDetail","callDetail","containers_callList","callCreate","Boolean","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"+RAIMA,EAAIC,OAAOD,EA0CFE,cAvCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,SAAU,IAJCR,mFAWC,IAAAS,EAAAN,KAChBO,MAAM,sBAAsBC,KAAK,SAACC,GAK9B,OAJwB,MAApBA,EAASC,QACTC,QAAQC,IAAI,WAGTH,EAASI,SACjBL,KAAK,SAAAK,GACQf,OAAAgB,EAAA,EAAAhB,CAAOQ,EAAKF,MAAMC,UACrBU,KAAKF,GACdF,QAAQC,IAAI,OAAQC,GACpBP,EAAKU,SAAS,CAACX,SAAUQ,uCAS7B,OACII,EAAAC,EAAAC,cAACC,EAAD,CAAsBf,SAAUL,KAAKI,MAAMC,SAAUgB,MAAOrB,KAAKJ,MAAMyB,eAjC5CC,aA0CjCC,cACF,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAA1B,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACfC,EAAA1B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,KAAMJ,KAMV6B,YAAc,SAACC,GACfF,EAAKR,SAAS,CAAEW,QAAQ,KARLH,EAWnBI,aAAe,SAACF,GACZF,EAAKR,SAAS,CAACW,QAASH,EAAKpB,MAAMuB,UAVnCH,EAAKpB,MAAQ,CACTuB,QAAQ,GAHGH,wEAgBV,IAAAK,EAAA7B,KAEDG,EAAOH,KAAKJ,MAAMO,KACtB,OAEIc,EAAAC,EAAAC,cAAA,OAAKW,UAAU,QAEXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4BACXb,EAAAC,EAAAC,cAAA,mBAAWhB,EAAK4B,IAChBd,EAAAC,EAAAC,cAAA,kBAAUhB,EAAK6B,OAEff,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,oBAAoBI,QAASlC,KAAK4B,cAApD,eACAX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOC,KAAMpC,KAAKI,MAAMuB,OAAQU,OAAQrC,KAAKyB,aACzCR,EAAAC,EAAAC,cAACgB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACrBtB,EAAAC,EAAAC,cAACgB,EAAA,EAAMK,MAAP,sBAGJvB,EAAAC,EAAAC,cAACgB,EAAA,EAAMM,KAAP,KACIxB,EAAAC,EAAAC,cAAA,MAAKY,GAAG,mBACJd,EAAAC,EAAAC,cAAA,UACKhB,EAAKuC,aAAaC,IAAI,SAACC,EAAOC,GAAR,OACnB5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOhB,UAAU,gBAAgBiB,IAAKF,EAAOG,IAAKJ,EAAMA,cAU5E3B,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,uBAAuBI,QAAS,SAACR,GAC/BG,EAAKjC,MAAMyB,MAAX,iBAAA4B,OAAkC9C,EAAK4B,GAAvC,KAA8C5B,KADlE,sCAhDDmB,aA+Db4B,cACF,SAAAA,EAAYtD,GAAO,IAAAuD,EAAA,OAAArD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,IACfC,EAAArD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoD,GAAA/C,KAAAH,KAAMJ,KAIVwD,kBAAmB,SAAC1B,GAEhBjC,EAAE4D,UAAUC,MAAM,WACd7D,EAAE,oBAAoB8D,GAAG,QAAS,WAC9B9D,EAAE,YAAY+D,YAAY,UAC1B/D,EAAEO,MAAMwD,YAAY,eAVbL,wEAiBV,IAAAM,EAAAzD,KAGD0D,EAAQ1D,KAAKJ,MAAMS,SAASsC,IAAI,SAACxC,GAAD,OAChCc,EAAAC,EAAAC,cAACwC,EAAD,CAAMZ,IAAK5C,EAAK4B,GAAI5B,KAAMA,EAAMkB,MAAOoC,EAAK7D,MAAMyB,UAGtD,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qBAAd,+CACJb,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBACdb,EAAAC,EAAAC,cAAA,OAAKY,GAAG,UAAUD,UAAU,OAExBb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,4BACVb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAgBb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SAAS9B,UAAU,2BAA2BI,QAAS,SAACR,GAClG+B,EAAK7D,MAAMyB,MAAM,oBADS,cAG9BJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,yBAAwBb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SAAS9B,UAAU,2BAA2BI,QAAS,SAACR,GAC1G+B,EAAK7D,MAAMyB,MAAM,oBADiB,iBAGtCJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,qBAAoBb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,wCAAuCb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBAAgB+B,KAAK,8CAAlC,cAMnG5C,EAAAC,EAAAC,cAAA,OAAKY,GAAG,WACJd,EAAAC,EAAAC,cAAA,UAAQ2C,KAAK,SAAS/B,GAAG,kBAAkBD,UAAU,cACjDb,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,kBAaZF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBACV4B,WAhEcpC,qCC4BpByC,GAzILrE,OAAOD,cAGb,SAAAsE,EAAYnE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACflE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4D,cAAe,GACfC,gBAAiB,GACjBrB,MAAO,IAEX/C,EAAKqE,YAAcrE,EAAKqE,YAAYC,KAAjBrE,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KACnBA,EAAKwE,YAAcxE,EAAKwE,YAAYF,KAAjBrE,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KARJA,2EAcPyE,GAAO,IAAAhE,EAAAN,KAEfsE,EAAMC,iBAEN,IAAIC,EAAOF,EAAMG,OAAOC,MAAM,GAC1BC,EAAa,IAAIC,WACrBD,EAAWE,UAAY,kBAAMvE,EAAKU,SAAS,CAACgD,cAAeW,EAAWG,UACtEH,EAAWI,cAAcP,GACzBxE,KAAKgB,SAAS,CAAC4B,MAAO4B,wCAOd9C,GAAG,IAAAF,EAAAxB,KACX0B,EAAE6C,iBAGF,IAAIS,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASlF,KAAKI,MAAMwC,OAEpCoC,EAASE,OAAO,kBAAmBC,KAAKC,UAAUpF,KAAKI,MAAM6D,kBAC7De,EAASE,OAAO,eAAgBC,KAAKC,UAAUC,SAASrF,KAAKJ,MAAM0F,kBAEnEN,EAASO,QAAQ,SAACC,EAAOzC,GACrBpC,QAAQC,IAAI,mBAAoBmC,EAAKyC,KAUzCjF,MAAM,cAPO,CACTkF,OAAQ,OACRC,KAAMV,IAKiBxE,KAAK,SAACC,GAC7B,OAAOA,EAASI,SACjBL,KAAK,SAACK,GAEL,IAAIoD,EAAenE,OAAAgB,EAAA,EAAAhB,CAAO0B,EAAKpB,MAAM6D,iBACrCA,EAAgBlD,KAAKF,GAGrBW,EAAKR,SAAS,CAACiD,oBACfzC,EAAKR,SAAS,CAACgD,cAAe,KAE9BrD,QAAQC,IAAI,QAASqD,sCAOzBtD,QAAQC,IAAIZ,KAAKI,MAAM4D,eACvB,IAMIpB,EANA+C,EAAS3F,KAAKI,MAAM6D,gBAAgBtB,IAAI,SAAAC,GACxC,OACI3B,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAiBiB,IAAKH,EAAMb,IAAId,EAAAC,EAAAC,cAAA,OAAK6B,IAAKJ,EAAMA,MAAOgD,IAAI,QAajF,OANIhD,EADD5C,KAAKI,MAAM4D,cACF/C,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAgBkB,IAAKhD,KAAKI,MAAM4D,cAAe4B,IAAI,QAGlE3E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,gBAAgBkB,IAAI,6GAA6G4C,IAAI,QAK5J3E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,4DACXb,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,CAAK/D,UAAU,sBAEXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,uBAAd,iDAKRb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uCACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,8DACXb,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMhE,UAAU,cAAciE,SAAU/F,KAAKqE,aAEzCpD,EAAAC,EAAAC,cAAA,OAAKW,UAAU,0BACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACVc,EAED3B,EAAAC,EAAAC,cAAA,SAAOW,UAAU,cAAcgC,KAAK,OAAOkC,SAAUhG,KAAKkE,YACnD+B,KAAK,YAKpBhF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,yBAAyBgC,KAAK,SAASF,QAAQ,aAAjE,mBAMZ3C,EAAAC,EAAAC,cAAA,OAAKW,UAAU,2BACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,+BACT6D,KAKb1E,EAAAC,EAAAC,cAAA,UAAQW,UAAU,wBAAuBb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBAAgB+B,KAAK,yDAAlC,mCA5H3BvC,sBCDxB7B,EAAIC,OAAOD,EAoNFyG,cAlNX,SAAAA,EAAYtG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,IACfrG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoG,GAAA/F,KAAAH,KAAMJ,KAyCVuG,WAAa,SAAC7B,GACVA,EAAMC,iBAEN,IAAIvC,EAAQ,CAACA,MAAOnC,EAAKO,MAAM4B,OAEzBoE,EAAO,CACTX,OAAQ,OACRC,KAAMP,KAAKC,UAAUpD,GACrBqE,QAAS,IAAIC,QAAQ,CAACC,eAAgB,sBAG1ChG,MAAM,qBAAsB6F,GAAM5F,KAAK,SAACC,GAKpC,OAJwB,MAApBA,EAASC,QACTC,QAAQC,IAAI,WAGTH,EAASI,SACjBL,KAAK,SAAAK,GACJF,QAAQC,IAAI,OAAQC,GACpBhB,EAAKmB,SAAS,CAACwF,aAAc3F,IAE7BhB,EAAK4G,WAAaC,YAAY,kBAAM7G,EAAK8G,wBAAwB,KACjE9G,EAAK8G,0BAhEM9G,EAqEnB+G,gBAAkB,SAAClF,GAEfA,EAAE6C,iBAKF,IAAIS,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASrF,EAAKO,MAAM4B,OAEpC,IAAMoE,EAAO,CACTX,OAAQ,OACRC,KAAMV,GAGVzE,MAAK,iBAAA0C,OAAkBpD,EAAKO,MAAMoG,aAAazE,GAA1C,KAAiDqE,GACjD5F,KAAK,SAAAC,GACF,OAAOA,EAASoG,SACjBrG,KAAK,SAASC,GACbE,QAAQC,IAAIH,MAxFLZ,EA6FnBiH,qBAAuB,SAACpF,GACpBqF,cAAclH,EAAK4G,aA9FJ5G,EAiGnBmH,kBAAmB,SAACtF,GAChBf,QAAQC,IAAIc,EAAE+C,OAAOwB,KAAMvE,EAAE+C,OAAOe,OACpC3F,EAAKmB,SAALlB,OAAAmH,EAAA,EAAAnH,CAAA,GAAgB4B,EAAE+C,OAAOwB,KAAOvE,EAAE+C,OAAOe,SAnG1B3F,EAsGnBuD,kBAAmB,SAAC1B,GAEZjC,EAAE4D,UAAUC,MAAM,WACd7D,EAAE,oBAAoB8D,GAAG,QAAS,WAC9B9D,EAAE,YAAY+D,YAAY,UAC1B/D,EAAEO,MAAMwD,YAAY,eAxGhC3D,EAAKO,MAAQ,CACT4B,MAAO,GACPwE,aAAc,CAACzE,GAAG,IAClBkC,gBAAkB,IAItBpE,EAAKmH,kBAAoBnH,EAAKmH,kBAAkB7C,KAAvBrE,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KACzBA,EAAKsG,WAAatG,EAAKsG,WAAWhC,KAAhBrE,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KAClBA,EAAK8G,qBAAuB9G,EAAK8G,qBAAqBxC,KAA1BrE,OAAAsE,EAAA,EAAAtE,QAAAsE,EAAA,EAAAtE,CAAAD,KAZbA,oFAoBEyE,GAAO,IAAAhE,EAAAN,KAExBW,QAAQC,IAAI,iBAEPZ,KAAKI,MAAMoG,aAAazE,IAI7BxB,MAAK,qBAAA0C,OAAsBjD,KAAKI,MAAMoG,aAAazE,GAA9C,YAA2DvB,KAAK,SAACC,GAKlE,OAJwB,MAApBA,EAASC,QACTC,QAAQC,IAAI,WAGTH,EAASI,SACjBL,KAAK,SAAAK,GACJP,EAAKU,SAAS,CAACiD,gBAAiBpD,IAChCF,QAAQC,IAAI,OAAQC,sCA+EnB,IAAAW,EAAAxB,KAED2F,EAAS3F,KAAKI,MAAM6D,gBAAgBtB,IAAI,SAAAC,GACxC,OACI3B,EAAAC,EAAAC,cAAA,MAAI4B,IAAKH,EAAMb,IAAId,EAAAC,EAAAC,cAAA,OAAK6B,IAAKJ,EAAMA,MAAOgD,IAAI,QAItD,OAGI3E,EAAAC,EAAAC,cAAA,OAAKW,UAAU,kBAEXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,gBAAd,uEACAb,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAEXb,EAAAC,EAAAC,cAAA,OAAKY,GAAG,UAAUD,UAAU,OAE1Bb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,4BACTb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,UAASb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SAAS9B,UAAU,2BAA2BI,QAAS,SAACR,GAC3FF,EAAK5B,MAAMyB,MAAM,oBADE,cAGvBJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kBAAiBb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SAAS9B,UAAU,2BAA2BI,QAAS,SAACR,GACnGF,EAAK5B,MAAMyB,MAAM,oBADU,iBAG/BJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cAAab,EAAAC,EAAAC,cAAA,UAAQW,UAAU,wCAAuCb,EAAAC,EAAAC,cAAA,KAAGW,UAAU,gBAAgB+B,KAAK,8CAAlC,uBAM5F5C,EAAAC,EAAAC,cAAA,OAAKY,GAAG,WACJd,EAAAC,EAAAC,cAAA,UAAQ2C,KAAK,SAAS/B,GAAG,kBAAkBD,UAAU,cACjDb,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,iBAYhBF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAAcC,GAAG,WAC5Bd,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAMC,SAAU/F,KAAKmG,YAEjBlF,EAAAC,EAAAC,cAAA,SAAOW,UAAU,cAAcoF,QAAQ,SAAvC,+BAEAjG,EAAAC,EAAAC,cAAA,SAAOW,UAAU,cACVgC,KAAK,MACL/B,GAAG,QACHkE,KAAK,QACLkB,YAAY,uBACZC,QAAQ,6BACRC,UAAQ,EAER7B,MAAOxF,KAAKI,MAAM4B,MAClBgE,SAAUhG,KAAKgH,oBAGtB/F,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,mBAAmBgC,KAAK,SAASF,QAAQ,aAA3D,4BAMJ3C,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,WAAWgC,KAAK,SAASF,QAAQ,YAAY1B,QAASlC,KAAK4G,iBAA7E,0BAGA3F,EAAAC,EAAAC,cAAA,KAAGW,UAAU,eAAe+B,KAAK,KAAjC,2DAA8F7D,KAAKI,MAAMoG,aAAazE,GAAtH,WAGAd,EAAAC,EAAAC,cAAA,OAAKW,UAAU,iCACXb,EAAAC,EAAAC,cAAA,UACKwE,YAtMkBrE,aCArC7B,EAAIC,OAAOD,EAqIF6H,cAlIX,SAAAA,EAAY1H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,IACfzH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,KAAAH,KAAMJ,KASVwD,kBAAoB,SAAC1B,GACZ7B,EAAKO,MAAMmH,SAASxF,KACrBpB,QAAQC,IAAI,KAAMf,EAAKD,MAAM4H,IAM7BjH,MAAK,qBAAA0C,OAAsBpD,EAAKD,MAAM4H,GAAjC,SAA2ChH,KAAK,SAACC,GAClD,GAAwB,MAApBA,EAASC,OAIb,OAAOD,EAASI,OAHZF,QAAQC,IAAI,aAIjBJ,KAAK,SAAAK,GACJhB,EAAKmB,SAAS,CAACuG,SAAU1G,IACzBF,QAAQC,IAAI,qBAAsBC,MAM1CpB,EAAE4D,UAAUC,MAAM,WACd7D,EAAE,oBAAoB8D,GAAG,QAAS,WAC9B9D,EAAE,YAAY+D,YAAY,UAC1B/D,EAAEO,MAAMwD,YAAY,eAjC5B7C,QAAQC,IAAI,sCAAuCf,EAAKD,OACxDC,EAAKO,MAAQ,CACTmH,SAAU1H,EAAKD,MAAM6H,MAJV5H,wEAyCV,IAAAS,EAAAN,KAGD0H,EAAe1H,KAAKI,MAAMmH,SAG9B,OAFA5G,QAAQC,IAAI,kCAAmCZ,KAAKI,MAAMmH,UAErDvH,KAAKI,MAAMmH,SAASxF,GAQrBd,EAAAC,EAAAC,cAAA,WAEKnB,KAAKJ,MAAM+H,QACZ1G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKW,UAAU,yBAEXb,EAAAC,EAAAC,cAAA,OAAKY,GAAG,UAAUD,UAAU,OAExBb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,4BACVb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,UAASb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SAAS9B,UAAU,2BAC3BI,QAAS,SAACR,GACNpB,EAAKV,MAAMyB,MAAM,oBAF7B,cAMvBJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,kBAAiBb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQ2B,QAAQ,SACR9B,UAAU,2BACVI,QAAS,SAACR,GACNpB,EAAKV,MAAMyB,MAAM,oBAH7B,iBAK/BJ,EAAAC,EAAAC,cAAA,MAAIW,UAAU,cACVb,EAAAC,EAAAC,cAAA,UAAQW,UAAU,wCAAuCb,EAAAC,EAAAC,cAAA,KACrDW,UAAU,gBAAgB+B,KAAK,8CADsB,uBASrE5C,EAAAC,EAAAC,cAAA,OAAKY,GAAG,WACJd,EAAAC,EAAAC,cAAA,UAAQ2C,KAAK,SAAS/B,GAAG,kBAAkBD,UAAU,cACjDb,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,iBAKX,KAELF,EAAAC,EAAAC,cAAA,UAEIF,EAAAC,EAAAC,cAAA,MAAI4B,IAAK2E,EAAa3F,GAAID,UAAU,aAChCb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAgBb,EAAAC,EAAAC,cAAA,6BAA6BuG,EAAa3F,GAAxE,KACAd,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAgBb,EAAAC,EAAAC,cAAA,mCAAmCuG,EAAa1F,OAE9Ef,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAgBb,EAAAC,EAAAC,cAAA,6BAA6BuG,EAAaE,MACxE3G,EAAAC,EAAAC,cAAA,MAAIW,UAAU,iBAAgBb,EAAAC,EAAAC,cAAA,8BAA8BuG,EAAaG,KAAKC,UAG9E7G,EAAAC,EAAAC,cAAA,MAAIW,UAAU,+BAET4F,EAAahF,aAAaC,IAAI,SAACC,GAAD,OAC3B3B,EAAAC,EAAAC,cAAC4G,EAAD,CAAsBhF,IAAKH,EAAMb,GAAI2F,aAAcpH,EAAKF,MAAMmH,SAAU3E,MAAOA,SAQ9F5C,KAAKJ,MAAM+H,QACR1G,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAC6G,EAAD,CAAa3G,MAAOrB,KAAKJ,MAAMyB,MAAO4G,WAAYjI,KAAKI,MAAMmH,YAEjE,MAzEDtG,EAAAC,EAAAC,cAAA,gCAjDwBG,aAqIrC4G,cACF,SAAAA,EAAYtI,GAAO,IAAA4B,EAAA,OAAA1B,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACf1G,EAAA1B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoI,GAAA/H,KAAAH,KAAMJ,KAMVgH,gBAAkB,SAAClF,GACfA,EAAE6C,iBACF5D,QAAQC,IAAI,QAASY,EAAK5B,OAE1Be,QAAQC,IAAI,aAAcY,EAAK5B,MAAMqI,YAGrC,IAGIjD,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAFJ,cAGZ,IAAMkB,EAAO,CACTX,OAAQ,OACRC,KAAMV,GAKVzE,MAAK,GAAA0C,OAZU,6CAYV,iBAAAA,OAA4BzB,EAAK5B,MAAMqI,WAAWlG,GAAlD,QAA4DqE,GAC5D5F,KAAK,SAAAC,GACF,OAAOA,EAASoG,SACjBrG,KAAK,SAAUC,GAEdE,QAAQC,IAAI,+BA/BLY,wEAuCf,OACIP,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cAEXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,cACXb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,mCAAlB,yBAA0Eb,EAAAC,EAAAC,cAAA,KACtEW,UAAU,YAD4D,iBAE1Eb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,kCAAkCI,QAASlC,KAAK4G,iBAAlE,kBAAkG3F,EAAAC,EAAAC,cAAA,KAC9FW,UAAU,YADoF,iBAElGb,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQH,UAAU,mCAAlB,4BAA6Eb,EAAAC,EAAAC,cAAA,KACzEW,UAAU,YAD+D,0BAhDvER,aA6DpB6G,cACF,SAAAA,EAAYvI,GAAO,IAAAiC,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACftG,EAAA/B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,KAOV6B,YAAc,SAACC,GACXG,EAAKb,SAAS,CAACW,QAAQ,KATRE,EAYnBD,aAAe,SAACF,GACZG,EAAKb,SAAS,CAACW,QAASE,EAAKzB,MAAMuB,UAVnCE,EAAKzB,MAAQ,CACTuB,QAAQ,GAJGE,wEAkBI7B,KAAKJ,MAAM8H,aAA9B,IACI9E,EAAQ5C,KAAKJ,MAAMgD,MAGvB,OACI3B,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOhB,UAAU,8BAA8BkB,IAAKJ,EAAMA,MAAOV,QAASlC,KAAK4B,eAG/EX,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAOL,UAAU,oBAAoBM,KAAMpC,KAAKI,MAAMuB,OAAQU,OAAQrC,KAAKyB,aACvER,EAAAC,EAAAC,cAACgB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GAAzB,KACAtB,EAAAC,EAAAC,cAACgB,EAAA,EAAMM,KAAP,KACIxB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAOhB,UAAU,eAAekB,IAAKJ,EAAMA,kBAhChCtB,aCpJpB8G,cAhDX,SAAAA,EAAYxI,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAoI,GAAAtI,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsI,GAAAjI,KAAAH,KACVJ,0EAQN,OACIqB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,eACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aACXb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UACfb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBA1CFR,gBCEKA,YAkDHA,yBCwCpB+G,GAnFL3I,OAAOD,cAIb,SAAA4I,EAAYzI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqI,IACfxI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuI,GAAAlI,KAAAH,KAAMJ,KAQVyB,MAAQ,SAACiH,EAAeb,GAEpB/H,OAAO6I,QAAQC,UAAU,GAAI,GAAIF,GACjCzI,EAAKmB,SAAS,CAACyG,KAAMA,IACrB9G,QAAQC,IAAI,OAAQ6G,IAVpB5H,EAAKO,MAAQ,CACTqH,KAAO,IAJI5H,wEAmBb,IAAAS,EAAAN,KACFyI,EAAW/I,OAAOgJ,SAASD,SAG/B,OAFA9H,QAAQC,IAAI6H,GAGHxH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAW7G,UAAU,SAIjBb,EAAAC,EAAAC,cAAA,OAAKW,UAAU,aAAYb,EAAAC,EAAAC,cAACyH,EAAD,OACd,WAGE,IAAIC,EAAO,8BAA8BC,KAAKL,GAC9C,OAAGI,EACQ5H,EAAAC,EAAAC,cAAC4H,EAAD,CAAgC1H,MAAOf,EAAKe,MAAOmG,GAAIqB,EAAK,GAAIpB,KAAMnH,EAAKF,MAAMqH,KAAOE,SAAS,KAI5GkB,EAAQ,iCAAiCC,KAAKL,IAEnCxH,EAAAC,EAAAC,cAAC6H,EAAD,CAAiB3H,MAAOf,EAAKe,MAAO6C,YAAa5D,EAAK4D,YACrCD,gBAAiB3D,EAAKF,MAAM6D,gBAC5BI,YAAa/D,EAAK+D,YAClBzB,MAAOtC,EAAKF,MAAMwC,MAClBoB,cAAe1D,EAAKF,MAAM4D,cAC1BsB,eAAgBuD,EAAK,MAIjDA,EAAO,0BAA0BC,KAAKL,IAE3BxH,EAAAC,EAAAC,cAAC4H,EAAD,CAAgC1H,MAAOf,EAAKe,MAAOmG,GAAIqB,EAAK,GAAIpB,KAAMnH,EAAKF,MAAMqH,KAAME,SAAS,KAI3GkB,EAAO,mBAAmBC,KAAKL,IAEpBxH,EAAAC,EAAAC,cAAC8H,EAAD,CAA0B5H,MAAOf,EAAKe,SAIjDwH,EAAO,iBAAiBC,KAAKL,IAEjBxH,EAAAC,EAAAC,cAAC+H,EAAD,CAA8B7H,MAAOf,EAAKe,MACT4C,gBAAiB3D,EAAKF,MAAM6D,gBAC5BD,cAAe1D,EAAKF,MAAM4D,qBAHvE,EAjCF,WA9BZ1C,cCHE6H,QACW,cAA7BzJ,OAAOgJ,SAASU,UAEe,UAA7B1J,OAAOgJ,SAASU,UAEhB1J,OAAOgJ,SAASU,SAASC,MACvB,2DCZNC,IAASC,OAAOtI,EAAAC,EAAAC,cAACqI,EAAD,MAASnG,SAASoG,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcrG,MAAM9C,KAAK,SAAAoJ,GACjCA,EAAaC","file":"static/js/main.52eb157b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Image, Row, Modal, Container,} from 'react-bootstrap';\n\n// import ModalImage from 'react-modal-image'\nconst $ = window.$;\n\nclass DispatchCallLogContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            callList: []\n        }\n\n\n    };\n\n\n    componentDidMount() {\n        fetch('/api/dispatchcall/').then((response) => {\n            if (response.status !== 200) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            let callList = [...this.state.callList];\n            callList.push(json);\n            console.log('json', json);\n            this.setState({callList: json});\n\n\n        });\n\n    }\n\n    render() {\n\n        return (\n            <OpenImagesOnCallList callList={this.state.callList} route={this.props.route}/>\n\n\n        )\n    }\n}\n\nexport default DispatchCallLogContainer;\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n    this.setState({ active: false });\n  };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render() {\n\n        var call = this.props.call;\n        return (\n\n            <div className=\"card\">\n\n                <div className=\"card-body call-list-card\">\n                    <p>Call #:{call.id}</p>\n                    <p>Phone:{call.phone}</p>\n\n                    <Button className=\"btn btn-secondary\" onClick={this.handleToggle}>Show Images</Button>\n                    <Modal show={this.state.active} onHide={this.handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Scene Images</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <ul  id=\"image-drop-down\">\n                                <li >\n                                    {call.scene_images.map((image, index) =>\n                                        <Image className=\"img-thumbnail\" key={index} src={image.image}/>\n                                    )}\n\n                                </li>\n                            </ul>\n\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Button className=\"btn btn-outline-dark\" onClick={(e) => {\n                                        this.props.route(`/dispatchcall/${call.id}/`, call)\n\n                                    }}>See/Send Call Detail Page</Button>\n\n\n\n            </div>\n\n    </div>\n    )\n    }\n}\n\n\nclass OpenImagesOnCallList extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount =(e) => {\n        // see https://bootstrapious.com/p/bootstrap-sidebar\n        $(document).ready(function () {\n            $('#sidebarCollapse').on('click', function () {\n                $('#sidebar').toggleClass('active');\n                $(this).toggleClass('active');\n            });\n        });\n    };\n\n\n\n    render() {\n        // <img src={call.image} alt=\"\"/>\n\n        let calls = this.props.callList.map((call) =>\n            <Card key={call.id} call={call} route={this.props.route}/>);\n\n\n        return (\n            <div>\n                <div className=\"topDispatch\">\n                    <h2 className=\"wecome-dispatcher\">Create A New Call Or Revisit Previous Calls</h2>\n                <div>\n                   <div className=\"faux-nav row wrapper2\">\n                    <nav id=\"sidebar\" className=\"Row\">\n\n                        <ul className=\"list-unstyled components\">\n                            <li className=\"active nav-li\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call nav-li\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/callCreate\\\\/\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout nav-li\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n                </div>\n\n\n\n\n\n\n                </div>\n\n                <div className=\"card-columns\">\n                    {calls}\n                </div>\n\n\n\n            </div>\n        )\n    }\n}\n\n","import {Button, Form, Card, Row, Container} from \"react-bootstrap\";\nimport React, {Component} from 'react';\nconst $ = window.$;\n\nclass ClientContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image_preview: \"\",\n            imageCollection: [],\n            image: \"\",\n        };\n        this.handleImage = this.handleImage.bind(this);\n        this.submitImage = this.submitImage.bind(this);\n    }\n\n\n    //\n\n    handleImage(event) {\n        //sets the preview box of image in react element\n        event.preventDefault();\n\n        let file = event.target.files[0];\n        let fileReader = new FileReader();\n        fileReader.onloadend = () => this.setState({image_preview: fileReader.result});\n        fileReader.readAsDataURL(file);\n        this.setState({image: file});\n\n    }\n\n\n\n\n    submitImage(e) {\n        e.preventDefault();\n\n        // form data needs to be set in here\n        let formData = new FormData();\n        formData.append(\"image\", this.state.image);\n        // formData.append(\"image_Preview\", this.state.image_preview);\n        formData.append(\"imageCollection\", JSON.stringify(this.state.imageCollection));\n        formData.append('dispatchCall', JSON.stringify(parseInt(this.props.dispatchCallId)));\n\n        formData.forEach((value, key) => {\n            console.log(\"key %s: value %s\", key, value);\n        });\n\n        const conf = {\n            method: \"POST\",\n            body: formData,\n\n        };\n\n\n        fetch('/api/scene/', conf).then((response) => {\n            return response.json();\n        }).then((json) => {\n\n            let imageCollection = [...this.state.imageCollection];\n            imageCollection.push(json);\n\n\n            this.setState({imageCollection});\n            this.setState({image_preview: \"\"});\n\n            console.log('added', imageCollection);\n        });\n    };\n\n\n    render() {\n\n        console.log(this.state.image_preview);\n        let images = this.state.imageCollection.map(image => {\n            return (\n                <li className=\"scene-photo-li\" key={image.id}><img src={image.image} alt=\"\"/></li>\n            )\n        });\n\n        let image;\n\n        if(this.state.image_preview) {\n            image = <img className=\"scene-photos \" src={this.state.image_preview} alt=\"...\"/>\n        } else {\n                // find grey plus sign\n            image = <img className=\"scene-photos \" src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTxJTbMY80oe9BRR3ykDS7V3L_IUZT-1ZTVzTyptew3F4N2UCYseA' alt=\"...\"/>\n        }\n\n        return (\n\n            <div className=\"scene-div col-xs-12 col-sm-10 col-lg-8 align-self-center\">\n                <Row className=\"align-items-center\">\n\n                    <div className=\"col\">\n                        <h1 className=\"please-submit-photo\">Please Submit A Photo To Emergency Services</h1>\n                    </div>\n                </Row>\n\n\n                <div className=\"row align-items-start image-box-div\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 imagebox\">\n                        <Form className=\"client-form\" onSubmit={this.submitImage}>\n\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-12\">\n                                    {image}\n\n                                    <input className=\"scene-input\" type=\"file\" onChange={this.handleImage}\n                                           name=\"image\"/>\n                                </div>\n                            </div>\n\n\n                            <Button className=\"submitImageButtonScene\" type=\"submit\" variant=\"secondary\">Submit\n                                Image</Button>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className=\" row align-items-center\">\n                    <div className=\"col\">\n                        <ul className=\"scene-photo-ul card-columns\">\n                            {images}\n                        </ul>\n                    </div>\n                </div>\n\n                <button className=\"btn btn-light logout\"><a className=\"logout-button\" href=\"https://thiswayup.org.au/how-do-you-feel/traumatised/\">Resources To Help Cope</a>\n                </button>\n\n\n            </div>)\n\n\n    };\n}\n\n\nexport default ClientContainer;","import {Button, Container, Form} from \"react-bootstrap\";\nimport React, {Component} from 'react';\n\nconst $ = window.$;\nclass DispatchCurrentCallContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            phone: '',\n            dispatchInfo: {id:\"\"},\n            imageCollection : [],\n            // baseURL: 'https://dashboard.heroku.com/apps/efficient-emergency/dispatchcall/'\n        };\n\n        this.handlePhoneNumber = this.handlePhoneNumber.bind(this);\n        this.createCall = this.createCall.bind(this);\n        this.updateDispatchImages = this.updateDispatchImages.bind(this);\n\n\n\n    }\n\n\n\n    updateDispatchImages(event) {\n\n        console.log('update images');\n        // return early to avoid nested mess\n        if (!this.state.dispatchInfo.id){\n            return;\n        }\n\n        fetch(`/api/dispatchcall/${this.state.dispatchInfo.id}/scene/`).then((response) => {\n            if (response.status !== 200) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            this.setState({imageCollection: json});\n            console.log('json', json);\n\n        });\n    };\n\n\n    createCall = (event) => {\n        event.preventDefault();\n\n        let phone = {phone: this.state.phone};\n\n        const conf = {\n            method: \"POST\",\n            body: JSON.stringify(phone),\n            headers: new Headers({\"Content-Type\": \"application/json\"})\n        };\n\n        fetch('/api/dispatchcall/', conf).then((response) => {\n            if (response.status !== 201) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            console.log('json', json);\n            this.setState({dispatchInfo: json});\n\n            this.intervalId = setInterval(() => this.updateDispatchImages(), 10000);\n            this.updateDispatchImages();\n        });\n\n    };\n\n    sendTextMessage = (e) => {\n        // send to twilio in this method\n        e.preventDefault();\n        //this just sets a variable only used here so i can console log it and verify\n        // let link = `${this.state.baseURL + this.state.dispatchInfo.id}/scene`;\n        // console.log('link', link);\n\n        var formData = new FormData();\n        formData.append('phone', this.state.phone);\n\n        const conf = {\n            method: \"POST\",\n            body: formData,\n        };\n\n        fetch(`/api/sendtext/${this.state.dispatchInfo.id}/`, conf)\n            .then(response => {\n                return response.text();\n            }).then(function(response){\n                console.log(response);\n        });\n    };\n\n\n    componentWillUnmount = (e) =>{\n        clearInterval(this.intervalId);\n    };\n\n    handlePhoneNumber= (e) => {\n        console.log(e.target.name, e.target.value);\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    componentDidMount =(e) => {\n            // see https://bootstrapious.com/p/bootstrap-sidebar\n            $(document).ready(function () {\n                $('#sidebarCollapse').on('click', function () {\n                    $('#sidebar').toggleClass('active');\n                    $(this).toggleClass('active');\n                });\n            });\n        };\n\n\n\n\n    render() {\n\n        let images = this.state.imageCollection.map(image=>{\n            return(\n                <li key={image.id}><img src={image.image} alt=\"\"/></li>\n            )\n        });\n\n        return (\n\n\n            <div className=\"callCreateMain\">\n\n                <h2 className=\"create-title\">Create Active Call and Send Text Message With Link To Submit Photos</h2>\n                <div>\n                 <div className=\"wrapper2 row faux-nav\">\n\n                     <nav id=\"sidebar\" className=\"Row\">\n\n                       <ul className=\"list-unstyled components\">\n                            <li className=\"active\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/callCreate\\\\/\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n                </div>\n                {/*<div className=\"faux-nav2\">*/}\n                    {/*<Button className=\"endCall btn btn-secondary endCallCreate\" onClick={(e) =>{*/}\n                        {/*this.props.route(\"/dispatchcall/\")*/}\n                    {/*}}>End Call</Button>*/}\n                    {/*<button className=\"btn btn-light logout create-call-logout\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>*/}\n                     {/*</button>*/}\n                {/*</div>*/}\n            <div className=\"formAndText\" id=\"overlay\">\n                <Form onSubmit={this.createCall} >\n\n                    <label className=\"label-phone\" htmlFor=\"phone\">Enter callers phone number:</label>\n\n                    <input className=\"input-phone\"\n                           type=\"tel\"\n                           id=\"phone\"\n                           name=\"phone\"\n                           placeholder=\"Format: 123-456-7890\"\n                           pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                           required\n\n                           value={this.state.phone}\n                           onChange={this.handlePhoneNumber}/>\n\n\n                    <br/>\n\n\n                    <Button className=\"createCallButton\" type=\"submit\" variant=\"secondary\">\n                        Create This Call Record</Button>\n                </Form>\n\n\n\n                <Button className=\"sendText\" type=\"submit\" variant=\"secondary\" onClick={this.sendTextMessage}>\n                    SEND LINK THROUGH TEXT</Button>\n\n                <p className=\"link-to-text\" href=\"#\"> https://efficient-emergency.herokuapp.com/dispatchcall/{this.state.dispatchInfo.id}/scene</p>\n            </div>\n\n                <div className=\"imagesFromClient card-columns\">\n                    <ul>\n                        {images}\n                    </ul>\n\n                </div>\n\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default DispatchCurrentCallContainer;","import React, {Component} from 'react';\nimport {Button, Container, Image, Modal, Nav} from 'react-bootstrap';\n\n\nconst $ = window.$;\n\nclass DispatchCallsDetailContainer extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"props available to DispcallsDetcont\", this.props);\n        this.state = {\n            callData: this.props.data\n        }\n\n\n    }\n\n    componentDidMount = (e) => {\n        if (!this.state.callData.id) {\n            console.log(\"pk\", this.props.pk);\n\n\n            // i need to fetch for this specific call\n            // the this.props.data is sending me an enpty object so i need at fetch request for the specific call #\n            //     thats in url\n            fetch(`/api/dispatchcall/${this.props.pk}/er/`).then((response) => {\n                if (response.status !== 200) {\n                    console.log(\"problem\");\n                    return;\n                }\n                return response.json();\n            }).then(json => {\n                this.setState({callData: json});\n                console.log(\"response here i am\", json)\n            });\n        }\n\n\n        // see https://bootstrapious.com/p/bootstrap-sidebar\n        $(document).ready(function () {\n            $('#sidebarCollapse').on('click', function () {\n                $('#sidebar').toggleClass('active');\n                $(this).toggleClass('active');\n            });\n        });\n    };\n\n\n    render() {\n        // console.log('here navDisplay', this.state.displayNav);\n\n        let specificCall = this.state.callData;\n        console.log('this props here state call data', this.state.callData);\n\n        if (!this.state.callData.id) {\n            return <div>Loading...</div>\n        }\n\n\n\n\n        return (\n            <div>\n\n                {this.props.showNav ? (\n                <div>\n                    <div className=\"wrapper2 row faux-nav\">\n\n                        <nav id=\"sidebar\" className=\"Row\">\n\n                            <ul className=\"list-unstyled components\">\n                                <li className=\"active\"><Button variant=\"danger\" className=\"switch btn-outline-light\"\n                                                               onClick={(e) => {\n                                                                   this.props.route(\"/dispatchcall/\")\n                                                               }}>Call List</Button></li>\n\n\n                                <li className=\"nav-start-call\"><Button variant=\"danger\"\n                                                                       className=\"switch btn-outline-light\"\n                                                                       onClick={(e) => {\n                                                                           this.props.route(\"/callCreate\\\\/\")\n                                                                       }}>Start A Call</Button></li>\n                                <li className=\"nav-logout\">\n                                    <button className=\"btn btn-light switch logout-calllist\"><a\n                                        className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click\n                                        to Logout</a>\n                                    </button>\n                                </li>\n                            </ul>\n                        </nav>\n\n\n                        <div id=\"content\">\n                            <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                                <span></span>\n                                <span></span>\n                                <span></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                 ) : null}\n\n                <ul>\n\n                    <li key={specificCall.id} className=\"detail-li\">\n                        <h3 className=\"detail-detail\"><strong>Call ID #: </strong>{specificCall.id} </h3>\n                        <h3 className=\"detail-detail\"><strong>Caller Phone # : </strong>{specificCall.phone}</h3>\n\n                        <h3 className=\"detail-detail\"><strong>Call Date: </strong>{specificCall.date}</h3>\n                        <h3 className=\"detail-detail\"><strong>Dispatcher: </strong>{specificCall.user.username}</h3>\n\n\n                        <h3 className=\"images-provider-detail-page\">\n\n                            {specificCall.scene_images.map((image) =>\n                                <ModalDetailComponent key={image.id} specificCall={this.state.callData} image={image}/>\n                            )}\n                        </h3>\n\n                    </li>\n                </ul>\n\n\n                {this.props.showNav ? (\n                    <section>\n                        <TextMedical route={this.props.route} dispatchId={this.state.callData}/>\n                    </section>\n                ) : null}\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default DispatchCallsDetailContainer;\n\nclass TextMedical extends Component {\n    constructor(props) {\n        super(props);\n\n\n    }\n\n\n    sendTextMessage = (e) => {\n        e.preventDefault();\n        console.log('debug', this.props);\n\n        console.log(\"dispatchid\", this.props.dispatchId);\n\n\n        let BASE_URL = \"https://efficient-emergency.herokuapp.com/\";\n\n        let phone = \"8644488487\";\n        var formData = new FormData();\n        formData.append('phone', phone);\n        const conf = {\n            method: \"POST\",\n            body: formData,\n\n        };\n\n\n        fetch(`${BASE_URL}api/sendtext/${this.props.dispatchId.id}/er/`, conf)\n            .then(response => {\n                return response.text();\n            }).then(function (response) {\n                // console.log(response);\n                console.log(\"fetch response completed\")\n\n            }\n        );\n    };\n\n\n    render() {\n        return (\n            <div className=\"er-buttons\">\n\n                <div className=\"er-buttons\">\n                    <Button className=\"send-to-field btn btn-secondary\">Send To Prisma Trauma <p\n                        className=\"er-phone\">864-111-2222</p></Button>\n                    <Button className=\"send-to-field btn btn-secondary\" onClick={this.sendTextMessage}>Send To GC EMS <p\n                        className=\"er-phone\">864-802-1417</p></Button>\n                    <Button className=\"send-to-field btn btn-secondary\">Send To Thorne Ambulance <p\n                        className=\"er-phone\">864-555-7777</p></Button>\n                </div>\n\n\n            </div>\n\n\n        )\n    }\n}\n\n\nclass ModalDetailComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n        this.setState({active: false});\n    };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render() {\n        let specificCall = this.props.specificCall;\n        let image = this.props.image;\n\n\n        return (\n            <div>\n\n                <Image className='img-thumbnail detail-images' src={image.image} onClick={this.handleToggle}/>\n\n\n                <Modal className=\"detail-modal-main\" show={this.state.active} onHide={this.handleClose}>\n                    <Modal.Header closeButton> </Modal.Header>\n                    <Modal.Body>\n                        <Image className='detail-modal' src={image.image}/>\n                    </Modal.Body>\n                </Modal>\n            </div>\n\n        )\n    }\n}\n","\nimport React, {Component} from 'react';\n\nclass HeartbeatComponent extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"wrapper top\">\n                <div className=\"blockcont\">\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HeartbeatComponent\n\n// see https://codepen.io/webstuff/pen/WxRxBB , modified","import React, {Component} from 'react';\nimport {Button, Modal, Image} from 'react-bootstrap';\n\n// no data is being passed into here,\n\nclass EMSCallsDetailContainer extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"emt data\", this.props.data)\n    }\n\n\n\n    render() {\n\n        let specificCall = this.props.data;\n        console.log('this props here', this.props);\n\n        return (\n\n            <div>\n\n                    <ul>\n\n                        testing\n\n                        {/*<li key={specificCall.id} className=\"detail-li\">*/}\n                             {/*<h3 className=\"detail-detail\"><strong>Call ID #: </strong>{specificCall.id} </h3>*/}\n                            {/*<h3 className=\"detail-detail\"><strong>Caller Phone # : </strong>{specificCall.phone}</h3>*/}\n\n                            {/*<h3 className=\"detail-detail\"><strong>Call Date: </strong>{specificCall.date}</h3>*/}\n                            {/*/!*<h3 className=\"detail-detail\"><strong>Dispatcher: </strong>{specificCall.user.username}</h3>*!/*/}\n\n                            {/*<h3 className=\"images-provider-detail-page\" >*/}\n\n                                {/*{specificCall.scene_images.map((image) =>*/}\n                                     {/*<ModalDetailComponent key={image.id} specificCall={this.props.data} image={image}/>*/}\n\n                                {/*)}*/}\n                            {/*</h3>*/}\n\n                        {/*</li>*/}\n                    </ul>\n\n            </div>\n                )\n            }\n\n        }\n\n\nexport default EMSCallsDetailContainer;\n\n\n\nclass ModalDetailComponent extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n        this.setState({ active: false });\n      };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render(){\n        let specificCall = this.props.specificCall;\n        let image = this.props.image;\n\n\n\n    return(\n        <div>\n\n            <Image  className='img-thumbnail detail-images'  src={image.image} onClick={this.handleToggle}/>\n\n\n                <Modal className=\"detail-modal-main\" show={this.state.active} onHide={this.handleClose}>\n                    <Modal.Header closeButton> </Modal.Header>\n                        <Modal.Body>\n                            <Image className='detail-modal'  src={image.image}/>\n                        </Modal.Body>\n                </Modal>\n        </div>\n\n    )\n    }\n}","import React, { Component } from 'react';\nimport DispatchCallLogContainer from \"./callList\"\nimport ClientContainer from \"./callDetail\"\nimport DispatchCurrentCallContainer from \"./callCreate\"\nimport DispatcherCallsDetailContainer from \"./dispatcherCallsDetail.js\"\nimport HeartbeatComponent from \"./heartbeat.js\"\nimport EMSCallsDetailContainer from './emt.js'\n\n\nimport '../App1.css';\nimport {Container} from 'react-bootstrap';\n\nconst $ = window.$;\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data : {}\n        };\n    }\n\n\n    route = (currentScreen, data) => {\n        //setting it tp oan object instead of string\n        window.history.pushState({}, '', currentScreen);\n        this.setState({data: data});\n        console.log(\"data\", data)\n\n\n    };\n\n\n  render(){\n    var pathname = window.location.pathname;\n    console.log(pathname);\n\n    return(\n             <Container className=\"Fluid\">\n\n\n\n                 <div className=\"mainheart\"><HeartbeatComponent/></div>\n                            {(() => {\n\n                                //AMBULANCE DETAIL VIEW\n                                let path = /\\/dispatchcall\\/(\\d+)\\/er\\//.exec(pathname);\n                                if(path){\n                                    return <DispatcherCallsDetailContainer route={this.route} pk={path[1]} data={this.state.data}  showNav={false}/>;\n                                }\n\n                                // CLIENT ON SCENE VIEW\n                                path =  /\\/dispatchcall\\/(\\d+)\\/scene\\//.exec(pathname);\n                                if(path) {\n                                    return <ClientContainer route={this.route} handleImage={this.handleImage}\n                                                            imageCollection={this.state.imageCollection}\n                                                            submitImage={this.submitImage}\n                                                            image={this.state.image}\n                                                            image_preview={this.state.image_preview}\n                                                            dispatchCallId={path[1]}/>;\n                                }\n\n                                //DISPATCHER DETAIL VIEW\n                                path = /\\/dispatchcall\\/(\\d+)\\//.exec(pathname);\n                                if(path){\n                                    return <DispatcherCallsDetailContainer route={this.route} pk={path[1]} data={this.state.data} showNav={true}/>;\n                                }\n\n                                //DISPATCHER LIST VIEW\n                                path = /\\/dispatchcall\\//.exec(pathname);\n                                if(path){\n                                    return <DispatchCallLogContainer route={this.route} />;\n                                }\n\n                                //DISPATCHER CREATE CALL VIEW\n                                path = /\\/callCreate\\//.exec(pathname);\n                                if(path){\n                                     return <DispatchCurrentCallContainer route={this.route}\n                                                                             imageCollection={this.state.imageCollection}\n                                                                             image_preview={this.state.image_preview}/>;\n                                }\n\n\n                            })()}\n\n\n             </Container>\n    )\n  };\n\n}\n\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}