{"version":3,"sources":["containers/callList.js","containers/callDetail.js","containers/callCreate.js","containers/dispatcherCallsDetail.js","containers/heartbeat.js","containers/emt.js","containers/App.js","serviceWorker.js","index.js"],"names":["$","window","DispatchCallLogContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","callList","_this2","fetch","then","response","status","console","log","json","toConsumableArray","push","setState","react_default","a","createElement","callList_OpenImagesOnCallList","route","Component","Card","_this3","handleClose","e","active","handleToggle","_this4","className","id","phone","Button","onClick","Modal","show","onHide","Header","closeButton","Title","Body","scene_images","map","image","index","Image","key","src","OpenImagesOnCallList","_this5","componentDidMount","document","ready","on","toggleClass","_this6","calls","callList_Card","variant","href","type","ClientContainer","image_preview","imageCollection","handleImage","bind","assertThisInitialized","submitImage","event","preventDefault","file","target","files","fileReader","FileReader","onloadend","result","readAsDataURL","formData","FormData","append","JSON","stringify","dispatchCallId","forEach","value","method","body","images","alt","Row","Form","onSubmit","onChange","name","DispatchCurrentCallContainer","createCall","conf","headers","Headers","Content-Type","dispatchInfo","intervalId","setInterval","updateDispatchImages","sendTextMessage","concat","text","componentWillUnmount","clearInterval","handlePhoneNumber","defineProperty","baseURL","htmlFor","placeholder","pattern","required","DispatchCallsDetailContainer","specificCall","data","date","user","username","dispatcherCallsDetail_ModalDetailComponent","dispatcherCallsDetail_TextMedical","dispatchId","TextMedical","ModalDetailComponent","HeartbeatComponent","EMSCallsDetailContainer","App","currentScreen","pathname","location","Container","heartbeat","containers_callList","dispatcherCallsDetail","callCreate","emt","pathParts","split","parseInt","callDetail","Boolean","hostname","match","ReactDOM","render","containers_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.f52be794.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Image, Row, Modal, Container,} from 'react-bootstrap';\n\n// import ModalImage from 'react-modal-image'\nconst $ = window.$;\n\nclass DispatchCallLogContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            callList: []\n        }\n\n\n    };\n\n\n    componentDidMount() {\n        fetch('/api/dispatchcall/').then((response) => {\n            if (response.status !== 200) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            let callList = [...this.state.callList];\n            callList.push(json);\n            console.log('json', json);\n            this.setState({callList: json});\n\n\n        });\n\n    }\n\n    render() {\n\n        return (\n            <OpenImagesOnCallList callList={this.state.callList} route={this.props.route}/>\n\n\n        )\n    }\n}\n\nexport default DispatchCallLogContainer;\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n    this.setState({ active: false });\n  };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render() {\n\n        var call = this.props.call;\n        return (\n\n            <div className=\"card\">\n\n                <div className=\"card-body call-list-card\">\n                    <p>Call #:{call.id}</p>\n                    <p>Phone:{call.phone}</p>\n\n                    <Button className=\"btn btn-secondary\" onClick={this.handleToggle}>Show Images</Button>\n                    <Modal show={this.state.active} onHide={this.handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Scene Images</Modal.Title>\n                        </Modal.Header>\n\n                        <Modal.Body>\n                            <ul  id=\"image-drop-down\">\n                                <li >\n                                    {call.scene_images.map((image, index) =>\n                                        <Image className=\"img-thumbnail\" key={index} src={image.image}/>\n                                    )}\n\n                                </li>\n                            </ul>\n\n                        </Modal.Body>\n\n                    </Modal>\n\n                    <Button className=\"btn btn-outline-dark\" onClick={(e) => {\n                                        this.props.route(\"dispatcherCallsDetail\", call)\n                                        // this.props.route(\"/dispatchcall/er/\", call)\n                                    }}>See/Send Call Detail Page</Button>\n\n\n\n            </div>\n\n    </div>\n    )\n    }\n}\n\n\nclass OpenImagesOnCallList extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount =(e) => {\n        // see https://bootstrapious.com/p/bootstrap-sidebar\n        $(document).ready(function () {\n            $('#sidebarCollapse').on('click', function () {\n                $('#sidebar').toggleClass('active');\n                $(this).toggleClass('active');\n            });\n        });\n    };\n\n\n\n    render() {\n        // <img src={call.image} alt=\"\"/>\n\n        let calls = this.props.callList.map((call) =>\n            <Card key={call.id} call={call} route={this.props.route}/>);\n\n\n        return (\n            <div>\n                <div className=\"topDispatch\">\n                    <h2 className=\"wecome-dispatcher\">Create A New Call Or Revisit Previous Calls</h2>\n\n                   <div className=\"faux-nav row wrapper2\">\n                    <nav id=\"sidebar\" className=\"Row\">\n\n                        <ul className=\"list-unstyled components\">\n                            <li className=\"active nav-li\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call nav-li\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"callCreate\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout nav-li\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n\n\n\n\n\n\n                </div>\n\n                <div className=\"card-columns\">\n                    {calls}\n                </div>\n\n\n\n            </div>\n        )\n    }\n}\n\n","import {Button, Form, Card, Row, Container} from \"react-bootstrap\";\nimport React, {Component} from 'react';\nconst $ = window.$;\n\nclass ClientContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image_preview: \"\",\n            imageCollection: [],\n            image: \"\",\n        };\n        this.handleImage = this.handleImage.bind(this);\n        this.submitImage = this.submitImage.bind(this);\n    }\n\n\n    componentDidMount =(e) => {\n        // see https://bootstrapious.com/p/bootstrap-sidebar\n        $(document).ready(function () {\n            $('#sidebarCollapse').on('click', function () {\n                $('#sidebar').toggleClass('active');\n                $(this).toggleClass('active');\n            });\n        });\n    };\n\n\n    handleImage(event) {\n        //sets the preview box of image in react element\n        event.preventDefault();\n\n        let file = event.target.files[0];\n        let fileReader = new FileReader();\n        fileReader.onloadend = () => this.setState({image_preview: fileReader.result});\n        fileReader.readAsDataURL(file);\n        this.setState({image: file});\n\n    }\n\n\n\n\n    submitImage(e) {\n        e.preventDefault();\n\n        // form data needs to be set in here\n        let formData = new FormData();\n        formData.append(\"image\", this.state.image);\n        // formData.append(\"image_Preview\", this.state.image_preview);\n        formData.append(\"imageCollection\", JSON.stringify(this.state.imageCollection));\n        formData.append(\"dispatchCall\", JSON.stringify(this.props.dispatchCallId));\n\n        formData.forEach((value, key) => {\n            console.log(\"key %s: value %s\", key, value);\n        });\n\n        const conf = {\n            method: \"POST\",\n            body: formData,\n\n        };\n\n\n        fetch('/api/scene/', conf).then((response) => {\n            return response.json();\n        }).then((json) => {\n\n            let imageCollection = [...this.state.imageCollection];\n            imageCollection.push(json);\n\n\n            this.setState({imageCollection});\n            this.setState({image_preview: \"\"});\n\n            console.log('added', imageCollection);\n        });\n    };\n\n\n    render() {\n\n        console.log(this.state.image_preview);\n        let images = this.state.imageCollection.map(image => {\n            return (\n                <li className=\"scene-photo-li\" key={image.id}><img src={image.image} alt=\"\"/></li>\n            )\n        });\n\n        let image;\n\n        if(this.state.image_preview) {\n            image = <img className=\"scene-photos \" src={this.state.image_preview} alt=\"...\"/>\n        } else {\n                // find grey plus sign\n            image = <img className=\"scene-photos \" src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTxJTbMY80oe9BRR3ykDS7V3L_IUZT-1ZTVzTyptew3F4N2UCYseA' alt=\"...\"/>\n        }\n\n        return (\n\n            <div className=\"scene-div col-xs-12 col-sm-10 col-lg-8 align-self-center\">\n                <Row className=\"align-items-center\">\n\n                    <div className=\"col\">\n                        <h1 className=\"please-submit-photo\">Please Submit A Photo To Emergency Services</h1>\n                    </div>\n                </Row>\n\n                 <div className=\"wrapper2\">\n\n                     <nav id=\"sidebar\" className=\"Row\">\n                         <ul className=\"list-unstyled components\">\n                            <li className=\"active\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"callCreate\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"row align-items-start image-box-div\">\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 imagebox\">\n                        <Form className=\"client-form\" onSubmit={this.submitImage}>\n\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-12\">\n                                    {image}\n\n                                    <input className=\"scene-input\" type=\"file\" onChange={this.handleImage}\n                                           name=\"image\"/>\n                                </div>\n                            </div>\n\n\n                            <Button className=\"submitImageButtonScene\" type=\"submit\" variant=\"secondary\">Submit\n                                Image</Button>\n                        </Form>\n                    </div>\n                </div>\n\n                <div className=\" row align-items-center\">\n                    <div className=\"col\">\n                        <ul className=\"scene-photo-ul card-columns\">\n                            {images}\n                        </ul>\n                    </div>\n                </div>\n\n                <button className=\"btn btn-light logout\"><a className=\"logout-button\" href=\"https://thiswayup.org.au/how-do-you-feel/traumatised/\">Resources To Help Cope</a>\n                </button>\n\n\n            </div>)\n\n\n    };\n}\n\n\nexport default ClientContainer;","import {Button, Container, Form} from \"react-bootstrap\";\nimport React, {Component} from 'react';\n\nconst $ = window.$;\nclass DispatchCurrentCallContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            phone: '',\n            dispatchInfo: {id:\"\"},\n            imageCollection : [],\n            baseURL: 'https://dashboard.heroku.com/apps/efficient-emergency/dispatchcall/'\n        };\n\n        this.handlePhoneNumber = this.handlePhoneNumber.bind(this);\n        this.createCall = this.createCall.bind(this);\n        this.updateDispatchImages = this.updateDispatchImages.bind(this);\n\n\n\n    }\n\n\n\n    updateDispatchImages(event) {\n\n        console.log('update images');\n        // return early to avoid nested mess\n        if (!this.state.dispatchInfo.id){\n            return;\n        }\n\n        fetch(`/api/dispatchcall/${this.state.dispatchInfo.id}/scene/`).then((response) => {\n            if (response.status !== 200) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            this.setState({imageCollection: json});\n            console.log('json', json);\n\n        });\n    };\n\n\n    createCall = (event) => {\n        event.preventDefault();\n\n        let phone = {phone: this.state.phone};\n\n        const conf = {\n            method: \"POST\",\n            body: JSON.stringify(phone),\n            headers: new Headers({\"Content-Type\": \"application/json\"})\n        };\n\n        fetch('/api/dispatchcall/', conf).then((response) => {\n            if (response.status !== 201) {\n                console.log(\"problem\")\n            }\n\n            return response.json();\n        }).then(json => {\n            console.log('json', json);\n            this.setState({dispatchInfo: json});\n\n            this.intervalId = setInterval(() => this.updateDispatchImages(), 10000);\n            this.updateDispatchImages();\n        });\n\n    };\n\n    sendTextMessage = (e) => {\n        // send to twilio in this method\n        e.preventDefault();\n        //this just sets a variable only used here so i can console log it and verify\n        // let link = `${this.state.baseURL + this.state.dispatchInfo.id}/scene`;\n        // console.log('link', link);\n\n        var formData = new FormData();\n        formData.append('phone', this.state.phone);\n\n        const conf = {\n            method: \"POST\",\n            body: formData,\n        };\n\n        fetch(`/api/sendtext/${this.state.dispatchInfo.id}/`, conf)\n            .then(response => {\n                return response.text();\n            }).then(function(response){\n                console.log(response);\n        });\n    };\n\n\n    componentWillUnmount = (e) =>{\n        clearInterval(this.intervalId);\n    };\n\n    handlePhoneNumber= (e) => {\n        console.log(e.target.name, e.target.value);\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    componentDidMount =(e) => {\n            // see https://bootstrapious.com/p/bootstrap-sidebar\n            $(document).ready(function () {\n                $('#sidebarCollapse').on('click', function () {\n                    $('#sidebar').toggleClass('active');\n                    $(this).toggleClass('active');\n                });\n            });\n        };\n\n\n\n\n    render() {\n\n        let images = this.state.imageCollection.map(image=>{\n            return(\n                <li key={image.id}><img src={image.image} alt=\"\"/></li>\n            )\n        });\n\n        return (\n\n\n            <div className=\"callCreateMain\">\n\n                <h2 className=\"create-title\">Create Active Call and Send Text Message With Link To Submit Photos</h2>\n                 <div className=\"wrapper2\">\n\n                     <nav id=\"sidebar\" className=\"Row\">\n\n                       <ul className=\"list-unstyled components\">\n                            <li className=\"active\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"callCreate\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n                {/*<div className=\"faux-nav2\">*/}\n                    {/*<Button className=\"endCall btn btn-secondary endCallCreate\" onClick={(e) =>{*/}\n                        {/*this.props.route(\"/dispatchcall/\")*/}\n                    {/*}}>End Call</Button>*/}\n                    {/*<button className=\"btn btn-light logout create-call-logout\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>*/}\n                     {/*</button>*/}\n                {/*</div>*/}\n\n                <Form onSubmit={this.createCall}>\n\n                    <label className=\"label-phone\" htmlFor=\"phone\">Enter callers phone number:</label>\n\n                    <input className=\"input-phone\"\n                           type=\"tel\"\n                           id=\"phone\"\n                           name=\"phone\"\n                           placeholder=\"Format: 123-456-7890\"\n                           pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                           required\n\n                           value={this.state.phone}\n                           onChange={this.handlePhoneNumber}/>\n\n\n                    <br/>\n\n\n                    <Button className=\"createCallButton\" type=\"submit\" variant=\"secondary\">\n                        Create This Call Record</Button>\n                </Form>\n\n\n\n                <Button className=\"sendText\" type=\"submit\" variant=\"secondary\" onClick={this.sendTextMessage}>\n                    SEND LINK THROUGH TEXT</Button>\n\n                <p className=\"link-to-text\" href=\"#\"> https://efficient-emergency.herokuapp.com/dispatchcall/{this.state.dispatchInfo.id}/scene</p>\n\n                <div className=\"imagesFromClient card-columns\">\n                    <ul>\n                        {images}\n                    </ul>\n\n                </div>\n\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default DispatchCurrentCallContainer;","import React, {Component} from 'react';\nimport {Button, Container, Image, Modal, Nav} from 'react-bootstrap';\nimport divWithClassName from \"react-bootstrap/es/utils/divWithClassName\";\nconst $ = window.$;\n\nclass DispatchCallsDetailContainer extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"props available to DispcallsDetcont\", this.props)\n        //props is data\n\n    }\n\n    componentDidMount =(e) => {\n        // see https://bootstrapious.com/p/bootstrap-sidebar\n        $(document).ready(function () {\n            $('#sidebarCollapse').on('click', function () {\n                $('#sidebar').toggleClass('active');\n                $(this).toggleClass('active');\n            });\n        });\n    };\n\n\n\n\n    render() {\n\n        let specificCall = this.props.data;\n        console.log('this props here', this.props);\n\n        return (\n\n            <div>\n                 <div className=\"wrapper2\">\n\n                     <nav id=\"sidebar\" className=\"Row\">\n\n                       <ul className=\"list-unstyled components\">\n                            <li className=\"active\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"/dispatchcall/\")\n                                }}>Call List</Button></li>\n                            <li className=\"nav-start-call\"><Button variant=\"danger\" className=\"switch btn-outline-light\" onClick={(e) => {\n                                this.props.route(\"callCreate\")\n                                }}>Start A Call</Button></li>\n                            <li className=\"nav-logout\"><button className=\"btn btn-light logout logout-calllist\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>\n                            </button></li>\n                        </ul>\n                    </nav>\n\n\n                    <div id=\"content\">\n                        <button type=\"button\" id=\"sidebarCollapse\" className=\"navbar-btn\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </button>\n                    </div>\n                </div>\n\n                    <ul>\n\n                        <li key={specificCall.id} className=\"detail-li\">\n                             <h3 className=\"detail-detail\"><strong>Call ID #: </strong>{specificCall.id} </h3>\n                            <h3 className=\"detail-detail\"><strong>Caller Phone # : </strong>{specificCall.phone}</h3>\n\n                            <h3 className=\"detail-detail\"><strong>Call Date: </strong>{specificCall.date}</h3>\n                            <h3 className=\"detail-detail\"><strong>Dispatcher: </strong>{specificCall.user.username}</h3>\n\n                             <Button className=\"btn btn-secondary return-to-call-list\"  onClick={(e) => {\n                                     this.props.route(\"/dispatchcall/\")\n                                        }}>Return To Call List Page </Button>\n\n                            <h3 className=\"images-provider-detail-page\" >\n\n                                {specificCall.scene_images.map((image) =>\n                                     <ModalDetailComponent key={image.id} specificCall={this.props.data} image={image}/>\n\n                                )}\n                            </h3>\n\n                        </li>\n                    </ul>\n\n\n\n            <section>\n                <TextMedical route={this.props.route} dispatchId={this.props.data.id}/>\n            </section>\n\n                {/*<button className=\"btn btn-light logout\"><a className=\"logout-button\" href=\"https://efficient-emergency.herokuapp.com/\">Click to Logout</a>*/}\n                 {/*</button>*/}\n\n                {/*<button className=\"btn btn-light emt-view-button\" onClick={(e) => {*/}\n                                     {/*this.props.route(\"EmtView\")*/}\n                                        {/*}}>Click to see emt view</button>*/}\n            </div>\n\n                )\n            }\n        }\n\n\nexport default DispatchCallsDetailContainer;\n\nclass TextMedical extends Component {\n    constructor(props) {\n    super(props);\n\n\n    }\n\n\n\n    sendTextMessage = (e) => {\n        e.preventDefault();\n        console.log('debug', this.props);\n        console.log(\"dispatchid\", this.props.dispatchId);\n\n\n        let BASE_URL = \"https://efficient-emergency.herokuapp.com/\";\n\n        let phone = \"8438021417\";\n        var formData = new FormData();\n        formData.append('phone', phone);\n         const conf ={\n             method: \"POST\",\n            body: formData,\n\n        };\n\n\n\n\n        fetch( `${BASE_URL}api/sendtext/${this.props.dispatchId}/er/`, conf)\n            .then(response => {\n                return response.text();\n            }).then(function(response){\n                // console.log(response);\n                console.log(\"fetch response completed\")\n\n    }\n\n);\n    };\n\n\n\n\n    render() {\n        return (\n            <div className=\"er-buttons\">\n\n                <div className=\"er-buttons\">\n                <Button className=\"send-to-field btn btn-secondary\" >Send To Prisma Trauma <p className=\"er-phone\">864-111-2222</p></Button>\n                <Button className=\"send-to-field btn btn-secondary\" onClick={this.sendTextMessage} >Send To GC EMS <p className=\"er-phone\">864-802-1417</p></Button>\n                <Button className=\"send-to-field btn btn-secondary\" >Send To Thorne Ambulance <p className=\"er-phone\">864-555-7777</p></Button>\n                </div>\n\n\n\n            </div>\n\n\n                )\n            }\n            }\n\n\nclass ModalDetailComponent extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n        this.setState({ active: false });\n      };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render(){\n        let specificCall = this.props.specificCall;\n        let image = this.props.image;\n\n\n\n    return(\n        <div>\n\n            <Image  className='img-thumbnail detail-images'  src={image.image} onClick={this.handleToggle}/>\n\n\n                <Modal className=\"detail-modal-main\" show={this.state.active} onHide={this.handleClose}>\n                    <Modal.Header closeButton> </Modal.Header>\n                        <Modal.Body>\n                            <Image className='detail-modal'  src={image.image}/>\n                        </Modal.Body>\n                </Modal>\n        </div>\n\n    )\n    }\n}\n","\nimport React, {Component} from 'react';\n\nclass HeartbeatComponent extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"wrapper top\">\n                <div className=\"blockcont\">\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                    <div className=\"block\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HeartbeatComponent\n\n// see https://codepen.io/webstuff/pen/WxRxBB , modified","import React, {Component} from 'react';\nimport {Button, Modal, Image} from 'react-bootstrap';\n\n// no data is being passed into here,\n\nclass EMSCallsDetailContainer extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"emt data\", this.props.data)\n    }\n\n\n\n    render() {\n\n        let specificCall = this.props.data;\n        console.log('this props here', this.props);\n\n        return (\n\n            <div>\n\n                    <ul>\n\n                        testing\n\n                        {/*<li key={specificCall.id} className=\"detail-li\">*/}\n                             {/*<h3 className=\"detail-detail\"><strong>Call ID #: </strong>{specificCall.id} </h3>*/}\n                            {/*<h3 className=\"detail-detail\"><strong>Caller Phone # : </strong>{specificCall.phone}</h3>*/}\n\n                            {/*<h3 className=\"detail-detail\"><strong>Call Date: </strong>{specificCall.date}</h3>*/}\n                            {/*/!*<h3 className=\"detail-detail\"><strong>Dispatcher: </strong>{specificCall.user.username}</h3>*!/*/}\n\n                            {/*<h3 className=\"images-provider-detail-page\" >*/}\n\n                                {/*{specificCall.scene_images.map((image) =>*/}\n                                     {/*<ModalDetailComponent key={image.id} specificCall={this.props.data} image={image}/>*/}\n\n                                {/*)}*/}\n                            {/*</h3>*/}\n\n                        {/*</li>*/}\n                    </ul>\n\n            </div>\n                )\n            }\n\n        }\n\n\nexport default EMSCallsDetailContainer;\n\n\n\nclass ModalDetailComponent extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active: false\n        }\n    }\n\n    handleClose = (e) => {\n        this.setState({ active: false });\n      };\n\n    handleToggle = (e) => {\n        this.setState({active: !this.state.active});\n\n    };\n\n    render(){\n        let specificCall = this.props.specificCall;\n        let image = this.props.image;\n\n\n\n    return(\n        <div>\n\n            <Image  className='img-thumbnail detail-images'  src={image.image} onClick={this.handleToggle}/>\n\n\n                <Modal className=\"detail-modal-main\" show={this.state.active} onHide={this.handleClose}>\n                    <Modal.Header closeButton> </Modal.Header>\n                        <Modal.Body>\n                            <Image className='detail-modal'  src={image.image}/>\n                        </Modal.Body>\n                </Modal>\n        </div>\n\n    )\n    }\n}","import React, { Component } from 'react';\nimport DispatchCallLogContainer from \"./callList\"\nimport ClientContainer from \"./callDetail\"\nimport DispatchCurrentCallContainer from \"./callCreate\"\nimport DispatcherCallsDetailContainer from \"./dispatcherCallsDetail.js\"\nimport HeartbeatComponent from \"./heartbeat.js\"\nimport EMSCallsDetailContainer from './emt.js'\n\n\nimport '../App1.css';\nimport {Container} from 'react-bootstrap';\n\nconst $ = window.$;\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentScreen: window.location,\n            data : {}\n        };\n    }\n\n\n    route = (currentScreen, data) => {\n        //setting it tp oan object instead of string\n        this.setState({currentScreen: {pathname: currentScreen}, data:data});\n        console.log(\"data\", data)\n\n\n    };\n\n\n  render(){\n      console.log(\"TESTING\", this.state.currentScreen.pathname);\n\n    return(\n\n\n             <Container className=\"Fluid\">\n\n\n\n                 <div className=\"mainheart\"><HeartbeatComponent/></div>\n                            {(() => {\n                                switch (this.state.currentScreen.pathname) {\n                                    case '/dispatchcall/':\n                                        return <DispatchCallLogContainer route={this.route} />;\n\n                                    case 'dispatcherCallsDetail':\n                                    // case '/dispatchcall/er/':\n                                        // let specificCall = props\n                                        return <DispatcherCallsDetailContainer route={this.route} data={this.state.data}/>;\n\n                                    case 'callCreate':\n                                        return <DispatchCurrentCallContainer route={this.route}\n                                                                             imageCollection={this.state.imageCollection}\n                                                                             image_preview={this.state.image_preview}/>;\n\n                                    case 'EmtView':\n                                        return <EMSCallsDetailContainer  route={this.route}  data={this.state.data}/>;\n\n                                    default :\n\n                                        var pathname = window.location.pathname;\n                                        var pathParts = pathname.split(\"/\");\n                                        let dispatchCallId = parseInt(pathParts[2]);\n                                        console.log(\"dispatchId\", dispatchCallId);\n\n\n\n                                        return <ClientContainer route={this.route} handleImage={this.handleImage}\n                                                                      imageCollection={this.state.imageCollection}\n                                                                        submitImage={this.submitImage}\n                                                                        image={this.state.image}\n                                                                        image_preview={this.state.image_preview}\n                                                                        dispatchCallId={dispatchCallId} />;\n\n                                }\n                            })()}\n\n\n             </Container>\n    )\n  };\n\n}\n\n\nexport default App;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}